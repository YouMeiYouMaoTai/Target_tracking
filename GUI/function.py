# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'caogaozhi.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import time
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
import infer_ui as inference

class Ui_MainWindow(QWidget):

    def __init__(self):
        QMainWindow.__init__(self)
        self.video_path = ""    # 选择视频的路径
        self.sign_expire = 0    # 是否终止处理的标志
        self.sign_pause = False # 是否暂停的标志
        self.pause_number = 0   # 表示下次应该显示“继续”还是“暂停”
        self.sign_trackWay = 1  # 跟踪方式，1表示上一帧为参考图，0表示始终以第一帧为参考图
        self.center_errors_0 = []   # 中心偏移距离，初始设为空，始终以第一帧
        self.center_errors_1 = []   # 中心偏移距离，初始设为空，以上一帧
        self.sign_annot = False # 所选择的视频是否有标注

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1400, 1000)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # 更换跟踪方式按钮 pushButton_Exchange
        self.pushButton_Exchange = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Exchange.setGeometry(QtCore.QRect(120, 650, 730, 60))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton_Exchange.setFont(font)
        self.pushButton_Exchange.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_Exchange.setObjectName("pushButton_Exchange")

        # 选择视频按钮 pushButton_SelectVideo
        self.pushButton_SelectVideo = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_SelectVideo.setGeometry(QtCore.QRect(120, 750, 300, 60))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton_SelectVideo.setFont(font)
        self.pushButton_SelectVideo.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_SelectVideo.setObjectName("pushButton_SelectVideo")

        # 点击开始处理视频按钮 pushButton_Start
        self.pushButton_Start = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Start.setGeometry(QtCore.QRect(550, 750, 300, 60))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton_Start.setFont(font)
        self.pushButton_Start.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_Start.setObjectName("pushButton_Start")

        # 暂停处理视频按钮 pushButton_Pause
        self.pushButton_Pause = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Pause.setGeometry(QtCore.QRect(120, 850, 300, 60))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton_Pause.setFont(font)
        self.pushButton_Pause.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_Pause.setObjectName("pushButton_Pause")

        # 终止处理视频按钮 pushButton_Expire
        self.pushButton_Expire = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Expire.setGeometry(QtCore.QRect(550, 850, 300, 60))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton_Expire.setFont(font)
        self.pushButton_Expire.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_Expire.setObjectName("pushButton_Expire")

        # 退出程序按钮 pushButton_Exit
        self.pushButton_Exit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Exit.setGeometry(QtCore.QRect(1000, 650, 260, 260))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButton_Exit.setFont(font)
        self.pushButton_Exit.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_Exit.setObjectName("pushButton_Exit")

        # 展示参考图像 Label_ref_image
        self.Label_ref_image = QtWidgets.QLabel(self.centralwidget)
        self.Label_ref_image.setGeometry(QtCore.QRect(500, 150, 254, 254))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.Label_ref_image.setFont(font)
        self.Label_ref_image.setObjectName("Label_ref_image")

        # 展示每一帧的结果 Label_frame
        self.Label_frame = QtWidgets.QLabel(self.centralwidget)
        self.Label_frame.setGeometry(QtCore.QRect(900, 150, 381, 381))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.Label_frame.setFont(font)
        self.Label_frame.setObjectName("Label_frame")

        # 展示概率 Label_prob
        self.Label_prob = QtWidgets.QLabel(self.centralwidget)
        self.Label_prob.setGeometry(QtCore.QRect(100, 150, 254, 254))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.Label_prob.setFont(font)
        self.Label_prob.setObjectName("Label_prob")

        # 以下三个 label 充当固定文字解释
        self.label_set1 = QtWidgets.QLabel(self.centralwidget)
        self.label_set1.setGeometry(QtCore.QRect(190, 110, 180, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_set1.setFont(font)
        self.label_set1.setObjectName("label_set1")
        self.label_set2 = QtWidgets.QLabel(self.centralwidget)
        self.label_set2.setGeometry(QtCore.QRect(600, 110, 140, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_set2.setFont(font)
        self.label_set2.setObjectName("label_set2")
        self.label_set3 = QtWidgets.QLabel(self.centralwidget)
        self.label_set3.setGeometry(QtCore.QRect(950, 110, 240, 30))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_set3.setFont(font)
        self.label_set3.setObjectName("label_set3")

        # 选择视频后该 label 显示该视频的路径
        self.label_disp_VideoPath = QtWidgets.QLabel(self.centralwidget)
        self.label_disp_VideoPath.setGeometry(QtCore.QRect(120, 570, 1300, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_disp_VideoPath.setFont(font)
        self.label_disp_VideoPath.setObjectName("label_disp_VideoPath")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1400, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 给 pushButton 按钮设置功能
        self.pushButton_SelectVideo.clicked.connect(lambda: self.openvideo())
        self.pushButton_Start.clicked.connect(lambda: self.start_disposal())
        self.pushButton_Exit.clicked.connect(lambda: self.Exit_ui())
        self.pushButton_Pause.clicked.connect(lambda: self.pause_program())
        self.pushButton_Expire.clicked.connect(lambda: self.expire_program())
        self.pushButton_Exchange.clicked.connect(lambda: self.Exchange_trackWay())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SiameseFC"))
        self.pushButton_SelectVideo.setText(_translate("MainWindow", "选择待处理视频"))
        self.pushButton_Start.setText(_translate("MainWindow", "开始处理视频"))
        self.pushButton_Exchange.setText(_translate("MainWindow", "以上一帧为参考（点击更换）"))
        self.pushButton_Pause.setText(_translate("MainWindow", "暂停"))
        self.pushButton_Expire.setText(_translate("MainWindow", "终止"))
        self.pushButton_Exit.setText(_translate("MainWindow", "退出"))
        self.Label_ref_image.setText(_translate("MainWindow", "Label_ref_image"))
        self.Label_frame.setText(_translate("MainWindow", "Label_frame"))
        self.Label_prob.setText(_translate("MainWindow", "Label_prob"))
        self.label_set1.setText(_translate("MainWindow", "概率可视化"))
        self.label_set2.setText(_translate("MainWindow", "参考图"))
        self.label_set3.setText(_translate("MainWindow", "每一帧的结果图"))
        self.label_disp_VideoPath.setText(_translate("MainWindow", "视频路径："))

    # 点击按钮选择视频
    def openvideo(self):
        self.pushButton_Expire.setText("终止")
        fname = QFileDialog.getOpenFileName(self, '选择视频', '', 'Image files(*.mp4)')
        self.video_path = fname[0]
        _translate = QtCore.QCoreApplication.translate
        self.label_disp_VideoPath.setText(_translate("MainWindow", "视频路径:" + self.video_path))
        annot_path = self.video_path[:-4]
        if os.path.lexists(annot_path) == True:
            self.sign_annot = True
            self.center_errors = []  # 中心偏移距离，初始设为空

    # 对已选择视频进行处理
    def start_disposal(self):
        # 恢复终止值
        self.sign_expire = 0
        inference.video_track(self)

    # 点击更换跟踪模式
    def Exchange_trackWay(self):
        if (self.sign_trackWay == 1):
            self.sign_trackWay = 0
            self.pushButton_Exchange.setText("以第一帧为参考（点击更换）")
        else:
            self.sign_trackWay = 1
            self.pushButton_Exchange.setText("以上一帧为参考（点击更换）")

    # 暂停处理
    def pause_program(self):
        # 将标志变量取反
        self.sign_pause = not self.sign_pause
        self.pause_number = self.pause_number + 1
        if(self.pause_number % 2 == 1):
            print("已暂停")
            self.pushButton_Pause.setText("继续")
        else:
            print("继续处理")
            self.pushButton_Pause.setText("暂停")
        # 循环等待，直到标志变量变为False，即按钮被再次点击
        while self.sign_pause:
            QApplication.processEvents()  # 处理其他事件，以保证程序的响应性
            time.sleep(0.1)  # 防止过度占用CPU资源

    # 终止处理
    def expire_program(self):
        self.sign_expire = 1
        print("已终止视频处理")
        self.pushButton_Expire.setText("已终止本次处理")
        self.pushButton_Pause.setText("暂停")
        self.sign_pause = 0
        self.sign_pause = False
        self.sign_annot = False
        self.pause_number = 0

    # 退出程序
    def Exit_ui(self):
        print("退出程序")
        exit()

